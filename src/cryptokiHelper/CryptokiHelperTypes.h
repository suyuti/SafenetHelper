/*
 * MyTypes.h
 *
 *  Created on: 27 AÄŸu 2013
 *      Author: hakilic
 */

#ifndef MYTYPES_H_
#define MYTYPES_H_

typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
typedef unsigned char uchar;

#define PUBLIC
#define PRIVATE
#define STATIC

typedef enum MechanismType
{
	 MT_RSA_PKCS_KEY_PAIR_GEN  =0x00000000,
	 MT_RSA_PKCS               =0x00000001,
	 MT_RSA_9796               =0x00000002,
	 MT_RSA_X_509              =0x00000003,
	 MT_MD2_RSA_PKCS           =0x00000004,
	 MT_MD5_RSA_PKCS           =0x00000005,
	 MT_SHA1_RSA_PKCS          =0x00000006,
	 MT_RIPEMD128_RSA_PKCS     =0x00000007,
	 MT_RIPEMD160_RSA_PKCS     =0x00000008,
	 MT_RSA_PKCS_OAEP		    =0x00000009,
	 MT_RSA_X9_31_KEY_PAIR_GEN =0x0000000A,
	 MT_RSA_X9_31	            =0x0000000B,
	 MT_SHA1_RSA_X9_31	        =0x0000000C,
	 MT_DSA_KEY_PAIR_GEN       =0x00000010,
	 MT_DSA                    =0x00000011,
	 MT_DSA_SHA1               =0x00000012,
	 MT_DH_PKCS_KEY_PAIR_GEN   =0x00000020,
	 MT_DH_PKCS_DERIVE         =0x00000021,
	 MT_X9_42_DH_KEY_PAIR_GEN  =0x00000030,
	 MT_X9_42_DH_DERIVE        =0x00000031,
	 MT_X9_42_DH_HYBRID_DERIVE =0x00000032,
	 MT_X9_42_MQV_DERIVE       =0x00000033,
	 MT_SHA256_RSA_PKCS        =0x00000040,
	 MT_SHA384_RSA_PKCS        =0x00000041,
	 MT_SHA512_RSA_PKCS        =0x00000042,
	 MT_SHA224_RSA_PKCS        =0x00000046,
	 MT_SHA224_RSA_PKCS_PSS    =0x00000047,
	 MT_RC2_KEY_GEN            =0x00000100,
	 MT_RC2_ECB                =0x00000101,
	 MT_RC2_CBC                =0x00000102,
	 MT_RC2_MAC                =0x00000103,
	 MT_RC2_MAC_GENERAL        =0x00000104,
	 MT_RC2_CBC_PAD            =0x00000105,
	 MT_RC4_KEY_GEN            =0x00000110,
	 MT_RC4                    =0x00000111,
	 MT_DES_KEY_GEN            =0x00000120,
	 MT_DES_ECB                =0x00000121,
	 MT_DES_CBC                =0x00000122,
	 MT_DES_MAC                =0x00000123,
	 MT_DES_MAC_GENERAL        =0x00000124,
	 MT_DES_CBC_PAD            =0x00000125,
	 MT_DES2_KEY_GEN           =0x00000130,
	 MT_DES3_KEY_GEN           =0x00000131,
	 MT_DES3_ECB               =0x00000132,
	 MT_DES3_CBC               =0x00000133,
	 MT_DES3_MAC               =0x00000134,
	 MT_DES3_MAC_GENERAL       =0x00000135,
	 MT_DES3_CBC_PAD           =0x00000136,
	 MT_CDMF_KEY_GEN           =0x00000140,
	 MT_CDMF_ECB               =0x00000141,
	 MT_CDMF_CBC               =0x00000142,
	 MT_CDMF_MAC               =0x00000143,
	 MT_CDMF_MAC_GENERAL       =0x00000144,
	 MT_CDMF_CBC_PAD           =0x00000145,
	 MT_MD2                    =0x00000200,
	 MT_MD2_HMAC               =0x00000201,
	 MT_MD2_HMAC_GENERAL       =0x00000202,
	 MT_MD5                    =0x00000210,
	 MT_MD5_HMAC               =0x00000211,
	 MT_MD5_HMAC_GENERAL       =0x00000212,
	 MT_SHA_1                  =0x00000220,
	 MT_SHA_1_HMAC             =0x00000221,
	 MT_SHA_1_HMAC_GENERAL     =0x00000222,
	 MT_RIPEMD128              =0x00000230,
	 MT_RIPEMD128_HMAC         =0x00000231,
	 MT_RIPEMD128_HMAC_GENERAL =0x00000232,
	 MT_RIPEMD160              =0x00000240,
	 MT_RIPEMD160_HMAC         =0x00000241,
	 MT_RIPEMD160_HMAC_GENERAL =0x00000242,
	 MT_SHA256                 =0x00000250,
	 MT_SHA256_HMAC            =0x00000251,
	 MT_SHA256_HMAC_GENERAL    =0x00000252,
	 MT_SHA224                 =0x00000255,
	 MT_SHA224_HMAC            =0x00000256,
	 MT_SHA224_HMAC_GENERAL    =0x00000257,
	 MT_SHA384                 =0x00000260,
	 MT_SHA384_HMAC            =0x00000261,
	 MT_SHA384_HMAC_GENERAL    =0x00000262,
	 MT_SHA512                 =0x00000270,
	 MT_SHA512_HMAC            =0x00000271,
	 MT_SHA512_HMAC_GENERAL    =0x00000272,
	 MT_CAST_KEY_GEN           =0x00000300,
	 MT_CAST_ECB               =0x00000301,
	 MT_CAST_CBC               =0x00000302,
	 MT_CAST_MAC               =0x00000303,
	 MT_CAST_MAC_GENERAL       =0x00000304,
	 MT_CAST_CBC_PAD           =0x00000305,
	 MT_CAST3_KEY_GEN          =0x00000310,
	 MT_CAST3_ECB              =0x00000311,
	 MT_CAST3_CBC              =0x00000312,
	 MT_CAST3_MAC              =0x00000313,
	 MT_CAST3_MAC_GENERAL      =0x00000314,
	 MT_CAST3_CBC_PAD          =0x00000315,
	 MT_CAST5_KEY_GEN          =0x00000320,
	 MT_CAST5_ECB              =0x00000321,
	 MT_CAST5_CBC              =0x00000322,
	 MT_CAST5_MAC              =0x00000323,
	 MT_CAST5_MAC_GENERAL      =0x00000324,
	 MT_CAST5_CBC_PAD          =0x00000325,
	 MT_CAST128_KEY_GEN        =0x00000320,
	 MT_CAST128_ECB            =0x00000321,
	 MT_CAST128_CBC            =0x00000322,
	 MT_CAST128_MAC            =0x00000323,
	 MT_CAST128_MAC_GENERAL    =0x00000324,
	 MT_CAST128_CBC_PAD        =0x00000325,
	 MT_RC5_KEY_GEN            =0x00000330,
	 MT_RC5_ECB                =0x00000331,
	 MT_RC5_CBC                =0x00000332,
	 MT_RC5_MAC                =0x00000333,
	 MT_RC5_MAC_GENERAL        =0x00000334,
	 MT_RC5_CBC_PAD            =0x00000335,
	 MT_IDEA_KEY_GEN           =0x00000340,
	 MT_IDEA_ECB               =0x00000341,
	 MT_IDEA_CBC               =0x00000342,
	 MT_IDEA_MAC               =0x00000343,
	 MT_IDEA_MAC_GENERAL       =0x00000344,
	 MT_IDEA_CBC_PAD               =0x00000345,
	 MT_GENERIC_SECRET_KEY_GEN     =0x00000350,
	 MT_CONCATENATE_BASE_AND_KEY   =0x00000360,
	 MT_CONCATENATE_BASE_AND_DATA  =0x00000362,
	 MT_CONCATENATE_DATA_AND_BASE  =0x00000363,
	 MT_XOR_BASE_AND_DATA          =0x00000364,
	 MT_EXTRACT_KEY_FROM_KEY       =0x00000365,
	 MT_SSL3_PRE_MASTER_KEY_GEN    =0x00000370,
	 MT_SSL3_MASTER_KEY_DERIVE     =0x00000371,
	 MT_SSL3_KEY_AND_MAC_DERIVE    =0x00000372,
	 MT_SSL3_MASTER_KEY_DERIVE_DH  =0x00000373,
	 MT_TLS_PRE_MASTER_KEY_GEN     =0x00000374,
	 MT_TLS_MASTER_KEY_DERIVE      =0x00000375,
	 MT_TLS_KEY_AND_MAC_DERIVE     =0x00000376,
	 MT_TLS_MASTER_KEY_DERIVE_DH   =0x00000377,
	 MT_SSL3_MD5_MAC               =0x00000380,
	 MT_SSL3_SHA1_MAC              =0x00000381,
	 MT_MD5_KEY_DERIVATION         =0x00000390,
	 MT_MD2_KEY_DERIVATION         =0x00000391,
	 MT_SHA1_KEY_DERIVATION        =0x00000392,
	 MT_SHA256_KEY_DERIVATION      =0x00000393,
	 MT_SHA384_KEY_DERIVATION      =0x00000394,
	 MT_SHA512_KEY_DERIVATION      =0x00000395,
	 MT_SHA224_KEY_DERIVATION      =0x00000396,
	 MT_PBE_MD2_DES_CBC            =0x000003A0,
	 MT_PBE_MD5_DES_CBC            =0x000003A1,
	 MT_PBE_MD5_CAST_CBC           =0x000003A2,
	 MT_PBE_MD5_CAST3_CBC          =0x000003A3,
	 MT_PBE_MD5_CAST5_CBC          =0x000003A4,
	 MT_PBE_MD5_CAST128_CBC        =0x000003A4,
	 MT_PBE_SHA1_CAST5_CBC         =0x000003A5,
	 MT_PBE_SHA1_CAST128_CBC       =0x000003A5,
	 MT_PBE_SHA1_RC4_128           =0x000003A6,
	 MT_PBE_SHA1_RC4_40            =0x000003A7,
	 MT_PBE_SHA1_DES3_EDE_CBC      =0x000003A8,
	 MT_PBE_SHA1_DES2_EDE_CBC      =0x000003A9,
	 MT_PBE_SHA1_RC2_128_CBC       =0x000003AA,
	 MT_PBE_SHA1_RC2_40_CBC        =0x000003AB,
	 MT_PKCS5_PBKD2				=0x000003B0,
	 MT_PBA_SHA1_WITH_SHA1_HMAC    =0x000003C0,
	 MT_KEY_WRAP_LYNKS             =0x00000400,
	 MT_KEY_WRAP_SET_OAEP          =0x00000401,
	 MT_ARIA_KEY_GEN               =0x00000560,
	 MT_ARIA_ECB                   =0x00000561,
	 MT_ARIA_CBC                   =0x00000562,
	 MT_ARIA_MAC                   =0x00000563,
	 MT_ARIA_MAC_GENERAL           =0x00000564,
	 MT_ARIA_CBC_PAD               =0x00000565,
	 MT_ARIA_ECB_ENCRYPT_DATA      =0x00000566,
	 MT_ARIA_CBC_ENCRYPT_DATA      =0x00000567,
	 MT_SKIPJACK_KEY_GEN           =0x00001000,
	 MT_SKIPJACK_ECB64             =0x00001001,
	 MT_SKIPJACK_CBC64             =0x00001002,
	 MT_SKIPJACK_OFB64             =0x00001003,
	 MT_SKIPJACK_CFB64             =0x00001004,
	 MT_SKIPJACK_CFB32             =0x00001005,
	 MT_SKIPJACK_CFB16             =0x00001006,
	 MT_SKIPJACK_CFB8              =0x00001007,
	 MT_SKIPJACK_WRAP              =0x00001008,
	 MT_SKIPJACK_PRIVATE_WRAP      =0x00001009,
	 MT_SKIPJACK_RELAYX            =0x0000100a,
	 MT_KEA_KEY_PAIR_GEN           =0x00001010,
	 MT_KEA_KEY_DERIVE             =0x00001011,
	 MT_FORTEZZA_TIMESTAMP         =0x00001020,
	 MT_BATON_KEY_GEN              =0x00001030,
	 MT_BATON_ECB128               =0x00001031,
	 MT_BATON_ECB96                =0x00001032,
	 MT_BATON_CBC128               =0x00001033,
	 MT_BATON_COUNTER              =0x00001034,
	 MT_BATON_SHUFFLE              =0x00001035,
	 MT_BATON_WRAP                 =0x00001036,
	 MT_ECDSA_KEY_PAIR_GEN         =0x00001040,
	 MT_EC_KEY_PAIR_GEN            =0x00001040,
	 MT_ECDSA                      =0x00001041,
	 MT_ECDSA_SHA1                 =0x00001042,
	 MT_ECDH1_DERIVE               =0x00001043,
	 MT_ECDH1_COFACTOR_DERIVE      =0x00001044,
	 MT_ECMQV_DERIVE               =0x00001045,
	 MT_JUNIPER_KEY_GEN            =0x00001060,
	 MT_JUNIPER_ECB128             =0x00001061,
	 MT_JUNIPER_CBC128             =0x00001062,
	 MT_JUNIPER_COUNTER            =0x00001063,
	 MT_JUNIPER_SHUFFLE            =0x00001064,
	 MT_JUNIPER_WRAP               =0x00001065,
	 MT_FASTHASH                   =0x00001070,
	 MT_AES_KEY_GEN                =0x00001080,
	 MT_AES_ECB                    =0x00001081,
	 MT_AES_CBC                    =0x00001082,
	 MT_AES_MAC                    =0x00001083,
	 MT_AES_MAC_GENERAL            =0x00001084,
	 MT_AES_CBC_PAD                =0x00001085,
	 MT_DSA_PARAMETER_GEN          =0x00002000,
	 MT_DH_PKCS_PARAMETER_GEN      =0x00002001,
	 MT_X9_42_DH_PARAMETER_GEN     =0x00002002
}MechanismType;

typedef enum ObjectClass
{
	 OC_DATA            	= 0x00000000,
	 OC_CERTIFICATE     	= 0x00000001,
	 OC_PUBLIC_KEY      	= 0x00000002,
	 OC_PRIVATE_KEY     	= 0x00000003,
	 OC_SECRET_KEY      	= 0x00000004,
	 OC_HW_FEATURE      	= 0x00000005,
	 OC_DOMAIN_PARAMETERS = 0x00000006,
}ObjectClass;

typedef enum KeyType
{
	KT_RSA             = 0x00000000,
	KT_DSA             = 0x00000001,
	KT_DH              = 0x00000002,
	KT_ECDSA           = 0x00000003,
	KT_EC              = 0x00000003,
	KT_X9_42_DH        = 0x00000004,
	KT_KEA             = 0x00000005,
	KT_GENERIC_SECRET  = 0x00000010,
	KT_RC2             = 0x00000011,
	KT_RC4             = 0x00000012,
	KT_RC5             = 0x00000019,
	KT_DES             = 0x00000013,
	KT_DES2            = 0x00000014,
	KT_DES3            = 0x00000015,
	KT_CAST            = 0x00000016,
	KT_CAST3           = 0x00000017,
	KT_CAST5           = 0x00000018,
	KT_CAST128         = 0x00000018,
	KT_IDEA            = 0x0000001a,
	KT_SKIPJACK        = 0x0000001b,
	KT_BATON           = 0x0000001c,
	KT_JUNIPER         = 0x0000001d,
	KT_CDMF            = 0x0000001e,
	KT_AES             = 0x0000001f,
	KT_ARIA            = 0x00000026
}KeyType;

typedef enum CKFlag
{
	FLG_TOKEN_PRESENT				= 0x00000001,
	FLG_REMOVABLE_DEVICE			= 0x00000002,
	FLG_HW_SLOT						= 0x00000004,
	FLG_RNG							= 0x00000001,
	FLG_WRITE_PROTECTED				= 0x00000002,
	FLG_LOGIN_REQUIRED				= 0x00000004,
	FLG_USER_PIN_INITIALIZED		= 0x00000008,
	FLG_EXCLUSIVE_EXISTS			= 0x00000010,
	FLG_RESTORE_KEY_NOT_NEEDED  	= 0x00000020,
	FLG_CLOCK_ON_TOKEN				= 0x00000040,
	FLG_PROTECTED_AUTHENTICATION_PA = 0x00000100,
	FLG_TOKEN_INITIALIZED			= 0x00000400,
	FLG_DUAL_CRYPTO_OPERATIONS      = 0x00000200,
	FLG_SECONDARY_AUTHENTICATION	= 0x00000800,
	FLG_USER_PIN_COUNT_LOW			= 0x00010000,
	FLG_USER_PIN_FINAL_TRY			= 0x00020000,
	FLG_USER_PIN_LOCKED				= 0x00040000,
	FLG_USER_PIN_TO_BE_CHANGED		= 0x00080000,
	FLG_SO_PIN_COUNT_LOW			= 0x00100000,
	FLG_SO_PIN_FINAL_TRY			= 0x00200000,
	FLG_SO_PIN_LOCKED				= 0x00400000,
	FLG_SO_PIN_TO_BE_CHANGED		= 0x00800000,
	FLG_EXCLUSIVE_SESSION   		= 0x00000001,
	FLG_RW_SESSION          		= 0x00000002,
	FLG_SERIAL_SESSION      		= 0x00000004,
	FLG_HW                  		= 0x00000001,
	FLG_ENCRYPT             		= 0x00000100,
	FLG_DECRYPT             		= 0x00000200,
	FLG_DIGEST              		= 0x00000400,
	FLG_SIGN                		= 0x00000800,
	FLG_SIGN_RECOVER        		= 0x00001000,
	FLG_VERIFY              		= 0x00002000,
	FLG_VERIFY_RECOVER      		= 0x00004000,
	FLG_GENERATE            		= 0x00008000,
	FLG_GENERATE_KEY_PAIR   		= 0x00010000,
	FLG_WRAP                		= 0x00020000,
	FLG_UNWRAP              		= 0x00040000,
	FLG_DERIVE              		= 0x00080000,
	FLG_EC_F_P              		= 0x00100000,
	FLG_EC_F_2M             		= 0x00200000,
	FLG_EC_ECPARAMETERS     		= 0x00400000,
	FLG_EC_NAMEDCURVE       		= 0x00800000,
	FLG_EC_UNCOMPRESS       		= 0x01000000,
	FLG_EC_COMPRESS         		= 0x02000000
}CKFlag;

typedef enum Attribute
{
	ATRBT_CLASS             = 0x00000000,
	ATRBT_TOKEN             = 0x00000001,
	ATRBT_PRIVATE           = 0x00000002,
	ATRBT_LABEL             = 0x00000003,
	ATRBT_APPLICATION       = 0x00000010,
	ATRBT_VALUE             = 0x00000011,
	ATRBT_OBJECT_ID         = 0x00000012,
	ATRBT_CERTIFICATE_TYPE  = 0x00000080,
	ATRBT_ISSUER            = 0x00000081,
	ATRBT_SERIAL_NUMBER     = 0x00000082,
	ATRBT_AC_ISSUER		  	= 0x00000083,
	ATRBT_OWNER             = 0x00000084,
	ATRBT_ATTR_TYPES        = 0x00000085,
	ATRBT_TRUSTED           = 0x00000086,
	ATRBT_KEY_TYPE          = 0x00000100,
	ATRBT_SUBJECT           = 0x00000101,
	ATRBT_ID                = 0x00000102,
	ATRBT_SENSITIVE         = 0x00000103,
	ATRBT_ENCRYPT           = 0x00000104,
	ATRBT_DECRYPT           = 0x00000105,
	ATRBT_WRAP              = 0x00000106,
	ATRBT_UNWRAP            = 0x00000107,
	ATRBT_SIGN              = 0x00000108,
	ATRBT_SIGN_RECOVER      = 0x00000109,
	ATRBT_VERIFY            = 0x0000010A,
	ATRBT_VERIFY_RECOVER    = 0x0000010B,
	ATRBT_DERIVE            = 0x0000010C,
	ATRBT_START_DATE        = 0x00000110,
	ATRBT_END_DATE          = 0x00000111,
	ATRBT_MODULUS           = 0x00000120,
	ATRBT_MODULUS_BITS      = 0x00000121,
	ATRBT_PUBLIC_EXPONENT   = 0x00000122,
	ATRBT_PRIVATE_EXPONENT  = 0x00000123,
	ATRBT_PRIME_1           = 0x00000124,
	ATRBT_PRIME_2           = 0x00000125,
	ATRBT_EXPONENT_1        = 0x00000126,
	ATRBT_EXPONENT_2        = 0x00000127,
	ATRBT_COEFFICIENT       = 0x00000128,
	ATRBT_PRIME             = 0x00000130,
	ATRBT_SUBPRIME          = 0x00000131,
	ATRBT_BASE              = 0x00000132,
	ATRBT_PRIME_BITS        = 0x00000133,
	ATRBT_SUB_PRIME_BITS    = 0x00000134,
	ATRBT_VALUE_BITS        = 0x00000160,
	ATRBT_VALUE_LEN         = 0x00000161,
	ATRBT_EXTRACTABLE       = 0x00000162,
	ATRBT_LOCAL             = 0x00000163,
	ATRBT_NEVER_EXTRACTABLE = 0x00000164,
	ATRBT_ALWAYS_SENSITIVE  = 0x00000165,
	ATRBT_KEY_GEN_MECHANISM = 0x00000166,
	ATRBT_MODIFIABLE        = 0x00000170,
	ATRBT_ECDSA_PARAMS      = 0x00000180,
	ATRBT_EC_PARAMS         = 0x00000180,
	ATRBT_EC_POINT          = 0x00000181,
	ATRBT_SECONDARY_AUTH    = 0x00000200,
	ATRBT_AUTH_PIN_FLAGS    = 0x00000201,
	ATRBT_HW_FEATURE_TYPE   = 0x00000300,
	ATRBT_RESET_ON_INIT     = 0x00000301,
	ATRBT_HAS_RESET         = 0x00000302
}Attribute;

typedef enum UserType
{
	UT_SO		= 0,    /* Security Officer */
	UT_USER	= 1   	/* Normal user */
}UserType;


#endif /* MYTYPES_H_ */
